apiVersion: v1
kind: Namespace
metadata:
  name: service-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-deployment
  namespace: service-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service
  template:
    metadata:
      labels:
        app: service
    spec:
      containers:
        - name: service
          image: REPLACE_WITH_IMAGE:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: DATABASE_URL
            - name: LOG_LEVEL
              value: "INFO"
            - name: DB_POOL_MIN_SIZE
              value: "1"
            - name: DB_POOL_MAX_SIZE
              value: "10"
            - name: METRICS_ENABLED
              value: "true"
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
      # Service account, network policies, tolerations can be added here
---
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: service-namespace
spec:
  selector:
    app: service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: ClusterIP

# Example secret manifest (create via kubectl create secret generic service-secrets --from-literal=DATABASE_URL='...')
---
apiVersion: v1
kind: Secret
metadata:
  name: service-secrets
  namespace: service-namespace
stringData:
  DATABASE_URL: "REPLACE_WITH_DATABASE_URL"
