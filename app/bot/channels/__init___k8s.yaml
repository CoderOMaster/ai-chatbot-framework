apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-microservice
  labels:
    app: fastapi-microservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fastapi-microservice
  template:
    metadata:
      labels:
        app: fastapi-microservice
    spec:
      containers:
        - name: fastapi-microservice
          image: <registry>/fastapi-microservice:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_URL
              value: "postgresql+asyncpg://user:pass@postgres.namespace.svc.cluster.local:5432/dbname"
            - name: LOG_LEVEL
              value: "INFO"
            - name: ENVIRONMENT
              value: "production"
            - name: DB_POOL_SIZE
              value: "5"
            - name: DB_MAX_OVERFLOW
              value: "10"
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
      # Add service account, tolerations, nodeSelectors as needed
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-microservice
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: fastapi-microservice
